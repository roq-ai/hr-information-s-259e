generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?    @db.VarChar
  image       String?    @db.VarChar
  name        String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  user_id     String     @db.Uuid
  tenant_id   String     @db.VarChar(255)
  user        user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employee    employee[]
}

model employee {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String?    @db.Uuid
  company_id    String?    @db.Uuid
  vacation_days Int        @default(0)
  payroll       Int
  created_at    DateTime   @default(now()) @db.Timestamp(6)
  updated_at    DateTime   @default(now()) @db.Timestamp(6)
  company       company?   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vacation      vacation[]
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  company     company[]
  employee    employee[]
}

model vacation {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  employee_id String?   @db.Uuid
  start_date  DateTime  @db.Date
  end_date    DateTime  @db.Date
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  employee    employee? @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
